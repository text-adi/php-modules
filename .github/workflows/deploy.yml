name: Build

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  IMAGE_NAME: php-modules
  PUSH: true

jobs:
  build:
    name: Build and push
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        platform:
          - linux/amd64
          - linux/arm64/v8
        include:
          - dockerfile: Dockerfiles-php/5.6/Dockerfile-alpine
            IMAGE: php:5.6-fpm-alpine
            NAME: 5.6-alpine
            PHP_BUILD_VERSION: 5.6
            PHP_EXTENSION_DIR: '/usr/local/lib/php/extensions/no-debug-non-zts-20131226'

          - dockerfile: Dockerfiles-php/7.0/Dockerfile-alpine
            IMAGE: php:7.0-fpm-alpine
            NAME: 7.0-alpine
            PHP_BUILD_VERSION: "7.0"
            PHP_EXTENSION_DIR: '/usr/local/lib/php/extensions/no-debug-non-zts-20151012'

          - dockerfile: Dockerfiles-php/7.1/Dockerfile-alpine
            IMAGE: php:7.1-fpm-alpine
            NAME: 7.1-alpine
            PHP_BUILD_VERSION: "7.1"
            PHP_EXTENSION_DIR: '/usr/local/lib/php/extensions/no-debug-non-zts-20160303'

          - dockerfile: Dockerfiles-php/7.2/Dockerfile-alpine
            IMAGE: php:7.2-fpm-alpine
            NAME: 7.2-alpine
            PHP_BUILD_VERSION: "7.2"
            PHP_EXTENSION_DIR: '/usr/local/lib/php/extensions/no-debug-non-zts-20160303'

          - dockerfile: Dockerfiles-php/7.3/Dockerfile-alpine
            IMAGE: php:7.3-fpm-alpine
            NAME: 7.3-alpine
            PHP_BUILD_VERSION: "7.3"
            PHP_EXTENSION_DIR: '/usr/local/lib/php/extensions/no-debug-non-zts-20160303'

          - dockerfile: Dockerfiles-php/7.4/Dockerfile-alpine
            IMAGE: php:7.4-fpm-alpine
            NAME: 7.4-alpine
            PHP_BUILD_VERSION: "7.4"
            PHP_EXTENSION_DIR: '/usr/local/lib/php/extensions/no-debug-non-zts-20160303'

          - dockerfile: Dockerfiles-php/8.0/Dockerfile-alpine
            IMAGE: php:8.0-fpm-alpine
            NAME: 8.0-alpine
            PHP_BUILD_VERSION: "8.0"
            PHP_EXTENSION_DIR: '/usr/local/lib/php/extensions/no-debug-non-zts-20160303'

          - dockerfile: Dockerfiles-php/8.1/Dockerfile-alpine
            IMAGE: php:8.1-fpm-alpine
            NAME: 8.1-alpine
            PHP_BUILD_VERSION: "8.1"
            PHP_EXTENSION_DIR: '/usr/local/lib/php/extensions/no-debug-non-zts-20160303'

          - dockerfile: Dockerfiles-php/8.2/Dockerfile-alpine
            IMAGE: php:8.2-fpm-alpine
            NAME: 8.2-alpine
            PHP_BUILD_VERSION: "8.2"
            PHP_EXTENSION_DIR: '/usr/local/lib/php/extensions/no-debug-non-zts-20160303'


    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set cache flags
        id: cache-flags
        run: |
          # Set the cache-to output
          echo 'cache-to=type=gha,scope=${{ github.ref_name }}-${{ matrix.platform }}-${{ matrix.IMAGE }}-${{ matrix.PHP_BUILD_VERSION }}-${{ matrix.PHP_EXTENSION_DIR }}' >> "${GITHUB_OUTPUT}"
          # Set the cache-from output
          if [[ '${{ github.event_name }}' == 'push' ]]; then
            echo 'cache-from=type=gha,scope=${{ github.ref_name }}-${{ matrix.platform }}-${{ matrix.IMAGE }}-${{ matrix.PHP_BUILD_VERSION }}-${{ matrix.PHP_EXTENSION_DIR }}' >> "${GITHUB_OUTPUT}"
          else
            # Use cache from target branch too when building a pull request
            # In this case, it has to be a multiline string
            # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#multiline-strings
            EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
            echo "cache-from<<${EOF}" >> "${GITHUB_OUTPUT}"
            printf '%s\n' \
              "type=gha,scope=${{ github.ref_name }}-${{ matrix.platform }}-${{ matrix.IMAGE }}-${{ matrix.PHP_BUILD_VERSION }}-${{ matrix.PHP_EXTENSION_DIR }}" \
              "type=gha,scope=${{ github.ref_name }}-${{ matrix.platform }}-${{ matrix.IMAGE }}-${{ matrix.PHP_BUILD_VERSION }}-${{ matrix.PHP_EXTENSION_DIR }}" \
              >> "${GITHUB_OUTPUT}"
            echo "${EOF}" >> "${GITHUB_OUTPUT}"
          fi

      - name: Build and Push by digest
        id: build
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: ${{ matrix.platform }}
          file: ${{ matrix.dockerfile }}
          build-args: |
            IMAGE=${{ matrix.IMAGE }}
            PHP_BUILD_VERSION=${{ matrix.PHP_BUILD_VERSION }}
            PHP_EXTENSION_DIR=${{ matrix.PHP_EXTENSION_DIR }}
          outputs: |
            type=image,name=${{ env.IMAGE_NAME }}push-by-digest=true,name-canonical=true,push=true
          cache-from: |
            ${{ steps.cache-flags.outputs.cache-from }}
          cache-to: |
            ${{ steps.cache-flags.outputs.cache-to }}

      - name: Export digest
        run: |
          mkdir -p /tmp/digests-${{ matrix.dockerfile }}
          digest='${{ steps.build.outputs.digest }}'
          touch "/tmp/digests-${{ matrix.dockerfile }}/${digest#:}"
      - name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: digests
          path: /tmp/${{ matrix.dockerfile }}/*
          if-no-files-found: error
          retention-days: 1
  push:
    runs-on: ubuntu-latest
    needs:
      - build

    strategy:
      fail-fast: true
      matrix:
        platform:
          - linux/amd64
          - linux/arm64/v8
        include:
          - dockerfile: Dockerfiles-php/5.6/Dockerfile-alpine
            IMAGE: php:5.6-fpm-alpine
            NAME: 5.6-alpine
            PHP_BUILD_VERSION: 5.6
            PHP_EXTENSION_DIR: '/usr/local/lib/php/extensions/no-debug-non-zts-20131226'

          - dockerfile: Dockerfiles-php/7.0/Dockerfile-alpine
            IMAGE: php:7.0-fpm-alpine
            NAME: 7.0-alpine
            PHP_BUILD_VERSION: "7.0"
            PHP_EXTENSION_DIR: '/usr/local/lib/php/extensions/no-debug-non-zts-20151012'

          - dockerfile: Dockerfiles-php/7.1/Dockerfile-alpine
            IMAGE: php:7.1-fpm-alpine
            NAME: 7.1-alpine
            PHP_BUILD_VERSION: "7.1"
            PHP_EXTENSION_DIR: '/usr/local/lib/php/extensions/no-debug-non-zts-20160303'

          - dockerfile: Dockerfiles-php/7.2/Dockerfile-alpine
            IMAGE: php:7.2-fpm-alpine
            NAME: 7.2-alpine
            PHP_BUILD_VERSION: "7.2"
            PHP_EXTENSION_DIR: '/usr/local/lib/php/extensions/no-debug-non-zts-20160303'

          - dockerfile: Dockerfiles-php/7.3/Dockerfile-alpine
            IMAGE: php:7.3-fpm-alpine
            NAME: 7.3-alpine
            PHP_BUILD_VERSION: "7.3"
            PHP_EXTENSION_DIR: '/usr/local/lib/php/extensions/no-debug-non-zts-20160303'

          - dockerfile: Dockerfiles-php/7.4/Dockerfile-alpine
            IMAGE: php:7.4-fpm-alpine
            NAME: 7.4-alpine
            PHP_BUILD_VERSION: "7.4"
            PHP_EXTENSION_DIR: '/usr/local/lib/php/extensions/no-debug-non-zts-20160303'

          - dockerfile: Dockerfiles-php/8.0/Dockerfile-alpine
            IMAGE: php:8.0-fpm-alpine
            NAME: 8.0-alpine
            PHP_BUILD_VERSION: "8.0"
            PHP_EXTENSION_DIR: '/usr/local/lib/php/extensions/no-debug-non-zts-20160303'

          - dockerfile: Dockerfiles-php/8.1/Dockerfile-alpine
            IMAGE: php:8.1-fpm-alpine
            NAME: 8.1-alpine
            PHP_BUILD_VERSION: "8.1"
            PHP_EXTENSION_DIR: '/usr/local/lib/php/extensions/no-debug-non-zts-20160303'

          - dockerfile: Dockerfiles-php/8.2/Dockerfile-alpine
            IMAGE: php:8.2-fpm-alpine
            NAME: 8.2-alpine
            PHP_BUILD_VERSION: "8.2"
            PHP_EXTENSION_DIR: '/usr/local/lib/php/extensions/no-debug-non-zts-20160303'

    steps:
      - name: Download digests
        uses: actions/download-artifact@v3
        with:
          name: digests
          path: /tmp/digests-${{ matrix.dockerfile }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Create manifest list and push
        working-directory: /tmp/digests-${{ matrix.dockerfile }}
        run: |
          docker buildx imagetools create -t ${{ matrix.NAME }} \
            $(printf '${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}@sha256:%s ' *)
